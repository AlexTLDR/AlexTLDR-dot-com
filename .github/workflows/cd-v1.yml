name: cd-v1

on:
    push:
        branches: [v1]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: alextldr/alextldr-dot-com

jobs:
    build-and-deploy:
        name: Build and Deploy V1
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=sha,prefix=sha-

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Deploy to Hetzner VM
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: 188.245.181.254
                  username: alex
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  passphrase: ${{ secrets.SSH_PASSPHRASE }}
                  script: |
                      # Login to GitHub Container Registry
                      echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

                      # Pull the latest v1 image
                      docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1

                      # Stop and remove existing v1 container
                      docker stop alextldr-v1 || true
                      docker rm alextldr-v1 || true

                      # Run the new v1 container
                      docker run -d \
                          --name alextldr-v1 \
                          --restart unless-stopped \
                          -p 1001:1001 \
                          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v1

                      echo "v1 container deployed successfully"

                      # Clean up old images
                      docker image prune -f
